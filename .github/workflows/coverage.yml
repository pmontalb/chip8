name: Coverage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Install gcc-11
        run: |
          sudo apt update
          sudo apt install gcc-11 g++-11

      - name: Install clang-13
        uses: egor-tensin/setup-clang@v1
        with:
          version: 13
          platform: any

      - name: Checkout
        uses: actions/checkout@v2

      - name: Checkout submodules
        shell: bash
        run: |
          git config --file .gitmodules --get-regexp url | while read url; do
          git config --file=.gitmodules $(echo "$url" | sed -E "s/git@github.com:|https:\/\/github.com\//https:\/\/${{ secrets.CI_PAT }}:${{ secrets.CI_PAT }}@github.com\//")
          done
          git submodule init
          git submodule update --init --recursive

      - name: Install cmake
        run: |
          sudo apt update
          sudo apt install cmake

      - name: Install ninja
        uses: seanmiddleditch/gha-setup-ninja@v3

      - name: Install gtest
        run: sudo apt-get install libgtest-dev
        
      - name: Install gcovr
        shell: bash
        run: |
          pip install gcovr
          
      - name: Cmake
        run: |
          cd ${{runner.workspace}}/chip8
          cp ${{runner.workspace}}/chip8/cmake/CMakePresets.json ${{runner.workspace}}/chip8/CMakePresets.json
          cmake . --preset=${{matrix.preset}}

      - name: Build
        run: |
          cd ${{runner.workspace}}/chip8/cmake-build-gcc-coverage
          ninja

      - name: Test
        run: |
          cd ${{runner.workspace}}/chip8/cmake-build-gcc-coverage
          ninja build_and_test
          
      - name: Coverage report
        shell: bash
        run: |
          cd ${{runner.workspace}}/chip8/cmake-build-gcc-coverage
          mkdir Coverage
          cd Coverage
          gcovr -r ../../ -x coverage.xml --xml-pretty -e ${{runner.workspace}}/chip8/Submodules/ -e ${{runner.workspace}}/chip8/cmake-build-gcc-coverage/_deps/ -e ${{runner.workspace}}/chip8/main.cpp --gcov-executable=gcov-11 -s
          mv coverage.xml ${{runner.workspace}}/coverage.xml

      - name: Archive coverage results
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report
          path: ${{runner.workspace}}/coverage.xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          file: ${{runner.workspace}}/coverage.xml # optional
          name: Unit Tests # optional
          fail_ci_if_error: true # optional (default = false)
          verbose: true # optional (default = false)
